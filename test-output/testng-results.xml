<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="171" passed="131" failed="27" skipped="11">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-10T09:52:58 IST" name="Default suite" finished-at="2022-09-10T09:52:58 IST" duration-ms="348">
    <groups>
      <group name="firefox.smoke">
        <method signature="TestNGRegularExpressionBySir.w15()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" name="w15" class="programBySir.TestNGRegularExpressionBySir"/>
      </group> <!-- firefox.smoke -->
      <group name="chrome.Regression">
        <method signature="TestNGRegularExpression.c3()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" name="c3" class="testNG.TestNGRegularExpression"/>
      </group> <!-- chrome.Regression -->
      <group name="firefox.Smoke">
        <method signature="TestNGRegularExpression.f2()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" name="f2" class="testNG.TestNGRegularExpression"/>
      </group> <!-- firefox.Smoke -->
      <group name="Sanity">
        <method signature="Group1.g1()[pri:0, instance:testNGSuites.Group1@6babf3bf]" name="g1" class="testNGSuites.Group1"/>
        <method signature="Group1.g3()[pri:0, instance:testNGSuites.Group1@6babf3bf]" name="g3" class="testNGSuites.Group1"/>
        <method signature="Group1.g5()[pri:0, instance:testNGSuites.Group1@6babf3bf]" name="g5" class="testNGSuites.Group1"/>
        <method signature="Group1BySir.test1()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test1" class="programBySir.Group1BySir"/>
        <method signature="Group1BySir.test2()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test2" class="programBySir.Group1BySir"/>
        <method signature="Group1BySir.test5()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test5" class="programBySir.Group1BySir"/>
        <method signature="Group2BySir.test11()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test11" class="programBySir.Group2BySir"/>
        <method signature="Group2BySir.test12()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test12" class="programBySir.Group2BySir"/>
        <method signature="Group2BySir.test15()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test15" class="programBySir.Group2BySir"/>
      </group> <!-- Sanity -->
      <group name="True.True/False">
        <method signature="Assertion1.asser3()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser3" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser33()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser33" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser4()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser4" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser44()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser44" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser55()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser55" class="testNG.Assertion1"/>
      </group> <!-- True.True/False -->
      <group name="firefox.regression">
        <method signature="TestNGRegularExpressionBySir.w14()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" name="w14" class="programBySir.TestNGRegularExpressionBySir"/>
      </group> <!-- firefox.regression -->
      <group name="chrome.smoke">
        <method signature="TestNGRegularExpressionBySir.w13()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" name="w13" class="programBySir.TestNGRegularExpressionBySir"/>
      </group> <!-- chrome.smoke -->
      <group name="False.Null/notNull">
        <method signature="Assertion1.asser99()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser99" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser999()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser999" class="testNG.Assertion1"/>
      </group> <!-- False.Null/notNull -->
      <group name="False.True/False">
        <method signature="Assertion1.asser5()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser5" class="testNG.Assertion1"/>
      </group> <!-- False.True/False -->
      <group name="Regression">
        <method signature="Group1.g2()[pri:0, instance:testNGSuites.Group1@6babf3bf]" name="g2" class="testNGSuites.Group1"/>
        <method signature="Group1.g3()[pri:0, instance:testNGSuites.Group1@6babf3bf]" name="g3" class="testNGSuites.Group1"/>
        <method signature="Group1.g6()[pri:0, instance:testNGSuites.Group1@6babf3bf]" name="g6" class="testNGSuites.Group1"/>
      </group> <!-- Regression -->
      <group name="chrome.Sanity">
        <method signature="TestNGRegularExpression.c1()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" name="c1" class="testNG.TestNGRegularExpression"/>
        <method signature="TestNGRegularExpressionBySir.w11()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" name="w11" class="programBySir.TestNGRegularExpressionBySir"/>
      </group> <!-- chrome.Sanity -->
      <group name="Smoke">
        <method signature="Group1.g4()[pri:0, instance:testNGSuites.Group1@6babf3bf]" name="g4" class="testNGSuites.Group1"/>
        <method signature="Group1.g5()[pri:0, instance:testNGSuites.Group1@6babf3bf]" name="g5" class="testNGSuites.Group1"/>
        <method signature="Group1.g6()[pri:0, instance:testNGSuites.Group1@6babf3bf]" name="g6" class="testNGSuites.Group1"/>
        <method signature="Group1BySir.test2()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test2" class="programBySir.Group1BySir"/>
        <method signature="Group1BySir.test4()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test4" class="programBySir.Group1BySir"/>
        <method signature="Group1BySir.test7()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test7" class="programBySir.Group1BySir"/>
        <method signature="Group2BySir.test12()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test12" class="programBySir.Group2BySir"/>
        <method signature="Group2BySir.test14()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test14" class="programBySir.Group2BySir"/>
        <method signature="Group2BySir.test17()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test17" class="programBySir.Group2BySir"/>
      </group> <!-- Smoke -->
      <group name="chrome.Smoke">
        <method signature="TestNGRegularExpression.c2()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" name="c2" class="testNG.TestNGRegularExpression"/>
      </group> <!-- chrome.Smoke -->
      <group name="True.Null/notNull">
        <method signature="Assertion1.asser9()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser9" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser9999()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser9999" class="testNG.Assertion1"/>
      </group> <!-- True.Null/notNull -->
      <group name="firefox.Regression">
        <method signature="TestNGRegularExpression.f3()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" name="f3" class="testNG.TestNGRegularExpression"/>
      </group> <!-- firefox.Regression -->
      <group name="regression">
        <method signature="Group1BySir.test3()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test3" class="programBySir.Group1BySir"/>
        <method signature="Group1BySir.test5()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test5" class="programBySir.Group1BySir"/>
        <method signature="Group1BySir.test6()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test6" class="programBySir.Group1BySir"/>
        <method signature="Group1BySir.test7()[pri:0, instance:programBySir.Group1BySir@483f6d77]" name="test7" class="programBySir.Group1BySir"/>
        <method signature="Group2BySir.test13()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test13" class="programBySir.Group2BySir"/>
        <method signature="Group2BySir.test15()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test15" class="programBySir.Group2BySir"/>
        <method signature="Group2BySir.test16()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test16" class="programBySir.Group2BySir"/>
        <method signature="Group2BySir.test17()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" name="test17" class="programBySir.Group2BySir"/>
      </group> <!-- regression -->
      <group name="True.Equals/not Equals">
        <method signature="Assertion1.asser11()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser11" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser111()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser111" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser22()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser22" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser2222()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser2222" class="testNG.Assertion1"/>
      </group> <!-- True.Equals/not Equals -->
      <group name="firefox.Sanity">
        <method signature="TestNGRegularExpression.f1()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" name="f1" class="testNG.TestNGRegularExpression"/>
        <method signature="TestNGRegularExpressionBySir.w12()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" name="w12" class="programBySir.TestNGRegularExpressionBySir"/>
      </group> <!-- firefox.Sanity -->
      <group name="False.Equals/not Equals">
        <method signature="Assertion1.asser1111()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser1111" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser2()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser2" class="testNG.Assertion1"/>
        <method signature="Assertion1.asser222()[pri:0, instance:testNG.Assertion1@10d307f1]" name="asser222" class="testNG.Assertion1"/>
      </group> <!-- False.Equals/not Equals -->
    </groups>
    <test started-at="2022-09-10T09:52:58 IST" name="Default test" finished-at="2022-09-10T09:52:58 IST" duration-ms="348">
      <class name="testNG.KeyWords3">
        <test-method signature="au1()[pri:0, instance:testNG.KeyWords3@72cde7cc]" started-at="2022-09-10T09:52:58 IST" name="au1" finished-at="2022-09-10T09:52:58 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- au1 -->
        <test-method signature="au2()[pri:0, instance:testNG.KeyWords3@72cde7cc]" started-at="2022-09-10T09:52:58 IST" name="au2" finished-at="2022-09-10T09:52:58 IST" duration-ms="26" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at testNG.KeyWords3.au2(KeyWords3.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- au2 -->
        <test-method signature="au3()[pri:0, instance:testNG.KeyWords3@72cde7cc]" started-at="2022-09-10T09:52:58 IST" name="au3" finished-at="2022-09-10T09:52:58 IST" depends-on-methods="testNG.KeyWords3.au2" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method KeyWords3.au3()[pri:0, instance:testNG.KeyWords3@72cde7cc] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method KeyWords3.au3()[pri:0, instance:testNG.KeyWords3@72cde7cc] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- au3 -->
        <test-method signature="au4()[pri:0, instance:testNG.KeyWords3@72cde7cc]" started-at="2022-09-10T09:52:58 IST" name="au4" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- au4 -->
        <test-method signature="au5()[pri:0, instance:testNG.KeyWords3@72cde7cc]" started-at="2022-09-10T09:52:58 IST" name="au5" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- au5 -->
      </class> <!-- testNG.KeyWords3 -->
      <class name="programBySir.Group2BySir">
        <test-method signature="test12()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" started-at="2022-09-10T09:52:58 IST" name="test12" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12 -->
        <test-method signature="test11()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" started-at="2022-09-10T09:52:58 IST" name="test11" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11 -->
        <test-method signature="test13()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" started-at="2022-09-10T09:52:58 IST" name="test13" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test13 -->
        <test-method signature="test14()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" started-at="2022-09-10T09:52:58 IST" name="test14" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test14 -->
        <test-method signature="test15()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" started-at="2022-09-10T09:52:58 IST" name="test15" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test15 -->
        <test-method signature="test16()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" started-at="2022-09-10T09:52:58 IST" name="test16" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test16 -->
        <test-method signature="test17()[pri:0, instance:programBySir.Group2BySir@49c7b90e]" started-at="2022-09-10T09:52:58 IST" name="test17" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test17 -->
      </class> <!-- programBySir.Group2BySir -->
      <class name="testNG.KeyWords1">
        <test-method signature="abc()[pri:-786, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="abc" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abc -->
        <test-method signature="xyz()[pri:-786, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="xyz" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method signature="wxyz()[pri:-101, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="wxyz" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wxyz -->
        <test-method signature="pqr()[pri:0, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="pqr" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pqr -->
        <test-method signature="pqrs()[pri:0, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="pqrs" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pqrs -->
        <test-method signature="def()[pri:101, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="def" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- def -->
        <test-method signature="Pqr()[pri:111, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="Pqr" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pqr -->
        <test-method signature="Abc()[pri:786, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="Abc" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Abc -->
        <test-method signature="jkl()[pri:786, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="jkl" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jkl -->
        <test-method signature="Xyz()[pri:1111, instance:testNG.KeyWords1@4944252c]" started-at="2022-09-10T09:52:58 IST" name="Xyz" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Xyz -->
      </class> <!-- testNG.KeyWords1 -->
      <class name="testNG.KeyWords2">
        <test-method signature="ab()[pri:0, instance:testNG.KeyWords2@a3d8174]" started-at="2022-09-10T09:52:58 IST" name="ab" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab2()[pri:0, instance:testNG.KeyWords2@a3d8174]" started-at="2022-09-10T09:52:58 IST" name="ab2" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab2 -->
        <test-method signature="ab4()[pri:0, instance:testNG.KeyWords2@a3d8174]" started-at="2022-09-10T09:52:58 IST" name="ab4" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab4 -->
        <test-method signature="ab5()[pri:0, instance:testNG.KeyWords2@a3d8174]" started-at="2022-09-10T09:52:58 IST" name="ab5" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab5 -->
        <test-method signature="ab6()[pri:0, instance:testNG.KeyWords2@a3d8174]" started-at="2022-09-10T09:52:58 IST" name="ab6" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab6 -->
        <test-method signature="ab7()[pri:0, instance:testNG.KeyWords2@a3d8174]" started-at="2022-09-10T09:52:58 IST" name="ab7" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab7 -->
        <test-method signature="ab1()[pri:1, instance:testNG.KeyWords2@a3d8174]" started-at="2022-09-10T09:52:58 IST" name="ab1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab1 -->
        <test-method signature="ab1()[pri:1, instance:testNG.KeyWords2@a3d8174]" started-at="2022-09-10T09:52:58 IST" name="ab1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab1 -->
        <test-method signature="ab1()[pri:1, instance:testNG.KeyWords2@a3d8174]" started-at="2022-09-10T09:52:58 IST" name="ab1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab1 -->
      </class> <!-- testNG.KeyWords2 -->
      <class name="testNGSuites.TestSuite1">
        <test-method signature="WXWZ()[pri:-1, instance:testNGSuites.TestSuite1@44821a96]" started-at="2022-09-10T09:52:58 IST" name="WXWZ" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WXWZ -->
        <test-method signature="a1()[pri:0, instance:testNGSuites.TestSuite1@44821a96]" started-at="2022-09-10T09:52:58 IST" name="a1" finished-at="2022-09-10T09:52:58 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at testNGSuites.TestSuite1.a1(TestSuite1.java:14)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method signature="jklm()[pri:0, instance:testNGSuites.TestSuite1@44821a96]" started-at="2022-09-10T09:52:58 IST" name="jklm" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jklm -->
        <test-method signature="pqrs()[pri:0, instance:testNGSuites.TestSuite1@44821a96]" started-at="2022-09-10T09:52:58 IST" name="pqrs" finished-at="2022-09-10T09:52:58 IST" duration-ms="17" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\FireFox\geckodriver-v0.31.0-win64\geckodriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\FireFox\geckodriver-v0.31.0-win64\geckodriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at testNGSuites.TestSuite1.pqrs(TestSuite1.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pqrs -->
        <test-method signature="xyz()[pri:0, instance:testNGSuites.TestSuite1@44821a96]" started-at="2022-09-10T09:52:58 IST" name="xyz" finished-at="2022-09-10T09:52:58 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at testNGSuites.TestSuite1.xyz(TestSuite1.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method signature="Mno()[pri:5, instance:testNGSuites.TestSuite1@44821a96]" started-at="2022-09-10T09:52:58 IST" name="Mno" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mno -->
        <test-method signature="Mno()[pri:5, instance:testNGSuites.TestSuite1@44821a96]" started-at="2022-09-10T09:52:58 IST" name="Mno" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mno -->
        <test-method signature="Mno()[pri:5, instance:testNGSuites.TestSuite1@44821a96]" started-at="2022-09-10T09:52:58 IST" name="Mno" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mno -->
      </class> <!-- testNGSuites.TestSuite1 -->
      <class name="testNGSuites.TestSuite2">
        <test-method signature="WXWZ()[pri:-1, instance:testNGSuites.TestSuite2@1ba9117e]" started-at="2022-09-10T09:52:58 IST" name="WXWZ" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WXWZ -->
        <test-method signature="b1()[pri:0, instance:testNGSuites.TestSuite2@1ba9117e]" started-at="2022-09-10T09:52:58 IST" name="b1" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at testNGSuites.TestSuite2.b1(TestSuite2.java:14)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b1 -->
        <test-method signature="jklm()[pri:0, instance:testNGSuites.TestSuite2@1ba9117e]" started-at="2022-09-10T09:52:58 IST" name="jklm" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jklm -->
        <test-method signature="pqrs()[pri:0, instance:testNGSuites.TestSuite2@1ba9117e]" started-at="2022-09-10T09:52:58 IST" name="pqrs" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\FireFox\geckodriver-v0.31.0-win64\geckodriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\FireFox\geckodriver-v0.31.0-win64\geckodriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at testNGSuites.TestSuite2.pqrs(TestSuite2.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pqrs -->
        <test-method signature="xyz()[pri:0, instance:testNGSuites.TestSuite2@1ba9117e]" started-at="2022-09-10T09:52:58 IST" name="xyz" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at testNGSuites.TestSuite2.xyz(TestSuite2.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method signature="Mno()[pri:5, instance:testNGSuites.TestSuite2@1ba9117e]" started-at="2022-09-10T09:52:58 IST" name="Mno" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mno -->
        <test-method signature="Mno()[pri:5, instance:testNGSuites.TestSuite2@1ba9117e]" started-at="2022-09-10T09:52:58 IST" name="Mno" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mno -->
        <test-method signature="Mno()[pri:5, instance:testNGSuites.TestSuite2@1ba9117e]" started-at="2022-09-10T09:52:58 IST" name="Mno" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mno -->
      </class> <!-- testNGSuites.TestSuite2 -->
      <class name="testNG.Assertion1">
        <test-method signature="asser1()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser1" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Dander] but found [Esteem]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Dander] but found [Esteem]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testNG.Assertion1.asser1(Assertion1.java:11)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser1 -->
        <test-method signature="asser11()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser11" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser11 -->
        <test-method signature="asser111()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser111" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser111 -->
        <test-method signature="asser1111()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser1111" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [11] but found [11]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [11] but found [11]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at testNG.Assertion1.asser1111(Assertion1.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser1111 -->
        <test-method signature="asser2()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser2" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [All iz Well] but found [Everything will be Okay]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [All iz Well] but found [Everything will be Okay]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testNG.Assertion1.asser2(Assertion1.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser2 -->
        <test-method signature="asser22()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser22" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser22 -->
        <test-method signature="asser222()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser222" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [22] but found [22]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [22] but found [22]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at testNG.Assertion1.asser222(Assertion1.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser222 -->
        <test-method signature="asser2222()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser2222" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser2222 -->
        <test-method signature="asser3()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser3" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser3 -->
        <test-method signature="asser33()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser33" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser33 -->
        <test-method signature="asser4()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser4" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser4 -->
        <test-method signature="asser44()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser44" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser44 -->
        <test-method signature="asser5()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser5" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testNG.Assertion1.asser5(Assertion1.java:83)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser5 -->
        <test-method signature="asser55()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser55" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser55 -->
        <test-method signature="asser9()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser9" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser9 -->
        <test-method signature="asser99()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser99" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [null] but found [abc]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [null] but found [abc]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotSame(Assert.java:1033)
at org.testng.Assert.assertNull(Assert.java:965)
at org.testng.Assert.assertNull(Assert.java:953)
at testNG.Assertion1.asser99(Assertion1.java:100)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser99 -->
        <test-method signature="asser999()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser999" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.assertNotNull(Assert.java:942)
at org.testng.Assert.assertNotNull(Assert.java:926)
at testNG.Assertion1.asser999(Assertion1.java:105)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser999 -->
        <test-method signature="asser9999()[pri:0, instance:testNG.Assertion1@10d307f1]" started-at="2022-09-10T09:52:58 IST" name="asser9999" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asser9999 -->
      </class> <!-- testNG.Assertion1 -->
      <class name="testNG.Assertion2">
        <test-method signature="assertionA()[pri:0, instance:testNG.Assertion2@4d5b6aac]" started-at="2022-09-10T09:52:58 IST" name="assertionA" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected object to not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected object to not be null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.assertNotNull(Assert.java:942)
at org.testng.Assert.assertNotNull(Assert.java:926)
at testNG.Assertion2.assertionA(Assertion2.java:14)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertionA -->
        <test-method signature="assertionB()[pri:0, instance:testNG.Assertion2@4d5b6aac]" started-at="2022-09-10T09:52:58 IST" name="assertionB" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testNG.Assertion2.assertionB(Assertion2.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertionB -->
      </class> <!-- testNG.Assertion2 -->
      <class name="testNG.Assertion3">
        <test-method signature="A2()[pri:0, instance:testNG.Assertion3@3e84448c]" started-at="2022-09-10T09:52:58 IST" name="A2" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A2 -->
        <test-method signature="A1()[pri:0, instance:testNG.Assertion3@3e84448c]" started-at="2022-09-10T09:52:58 IST" name="A1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A1 -->
      </class> <!-- testNG.Assertion3 -->
      <class name="pomEXECUTION.ActitimeExecution">
        <test-method is-config="true" signature="OpenBrowser()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="OpenBrowser" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.ActitimeExecution.OpenBrowser(ActitimeExecution.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method signature="T1()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="T1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.ActitimeExecution.OpenBrowser(ActitimeExecution.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T1 -->
        <test-method is-config="true" signature="login()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="login" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778724" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="logout()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="logout" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778725" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method signature="T2()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="T2" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.ActitimeExecution.OpenBrowser(ActitimeExecution.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T2 -->
        <test-method is-config="true" signature="login()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="login" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778726" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="logout()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="logout" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778727" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="login()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="login" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778728" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="T3()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="T3" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.ActitimeExecution.OpenBrowser(ActitimeExecution.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T3 -->
        <test-method is-config="true" signature="logout()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="logout" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778730" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="login()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="login" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778731" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="T4()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="T4" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.ActitimeExecution.OpenBrowser(ActitimeExecution.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T4 -->
        <test-method is-config="true" signature="logout()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="logout" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778733" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="login()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="login" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778733" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="T5()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="T5" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.ActitimeExecution.OpenBrowser(ActitimeExecution.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T5 -->
        <test-method is-config="true" signature="browserClosed()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="browserClosed" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778735" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserClosed -->
        <test-method is-config="true" signature="logout()[pri:0, instance:pomEXECUTION.ActitimeExecution@4a7f959b]" started-at="2022-09-10T09:52:58 IST" name="logout" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778735" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- pomEXECUTION.ActitimeExecution -->
      <class name="testNG.TestNGAnnotations1">
        <test-method signature="t1()[pri:0, instance:testNG.TestNGAnnotations1@732c2a62]" started-at="2022-09-10T09:52:58 IST" name="t1" finished-at="2022-09-10T09:52:58 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at testNG.TestNGAnnotations1.t1(TestNGAnnotations1.java:18)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t1 -->
        <test-method signature="t2()[pri:0, instance:testNG.TestNGAnnotations1@732c2a62]" started-at="2022-09-10T09:52:58 IST" name="t2" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t2 -->
      </class> <!-- testNG.TestNGAnnotations1 -->
      <class name="testNG.TestNGRegularExpression">
        <test-method signature="c1()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" started-at="2022-09-10T09:52:58 IST" name="c1" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c1 -->
        <test-method signature="c2()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" started-at="2022-09-10T09:52:58 IST" name="c2" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c2 -->
        <test-method signature="c3()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" started-at="2022-09-10T09:52:58 IST" name="c3" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c3 -->
        <test-method signature="f1()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" started-at="2022-09-10T09:52:58 IST" name="f1" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method signature="f2()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" started-at="2022-09-10T09:52:58 IST" name="f2" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method signature="f3()[pri:0, instance:testNG.TestNGRegularExpression@101952da]" started-at="2022-09-10T09:52:58 IST" name="f3" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f3 -->
      </class> <!-- testNG.TestNGRegularExpression -->
      <class name="testNG.TestNGAnnotations2">
        <test-method is-config="true" signature="a5()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a5" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a5 -->
        <test-method is-config="true" signature="a1()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method signature="a1()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method signature="a10()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a10" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a10 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method signature="a2()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a2" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a2 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method signature="a3()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a3" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a3 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method signature="a4()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a4" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a4 -->
        <test-method signature="a5()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a5" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a5 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method signature="a6()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a6" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a6 -->
        <test-method signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method signature="a8()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a8" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a8 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method is-config="true" signature="a7()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a7" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a7 -->
        <test-method signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method is-config="true" signature="a9()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a9 -->
        <test-method is-config="true" signature="a8()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a8" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778789" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a8 -->
        <test-method is-config="true" signature="a6()[pri:0, instance:testNG.TestNGAnnotations2@50b5ac82]" started-at="2022-09-10T09:52:58 IST" name="a6" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778894" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a6 -->
      </class> <!-- testNG.TestNGAnnotations2 -->
      <class name="testNGSuites.Group1">
        <test-method signature="g1()[pri:0, instance:testNGSuites.Group1@6babf3bf]" started-at="2022-09-10T09:52:58 IST" name="g1" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- g1 -->
        <test-method signature="g2()[pri:0, instance:testNGSuites.Group1@6babf3bf]" started-at="2022-09-10T09:52:58 IST" name="g2" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- g2 -->
        <test-method signature="g3()[pri:0, instance:testNGSuites.Group1@6babf3bf]" started-at="2022-09-10T09:52:58 IST" name="g3" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- g3 -->
        <test-method signature="g4()[pri:0, instance:testNGSuites.Group1@6babf3bf]" started-at="2022-09-10T09:52:58 IST" name="g4" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- g4 -->
        <test-method signature="g5()[pri:0, instance:testNGSuites.Group1@6babf3bf]" started-at="2022-09-10T09:52:58 IST" name="g5" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- g5 -->
        <test-method signature="g6()[pri:0, instance:testNGSuites.Group1@6babf3bf]" started-at="2022-09-10T09:52:58 IST" name="g6" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- g6 -->
        <test-method signature="g7()[pri:0, instance:testNGSuites.Group1@6babf3bf]" started-at="2022-09-10T09:52:58 IST" name="g7" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at testNGSuites.Group1.g7(Group1.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- g7 -->
      </class> <!-- testNGSuites.Group1 -->
      <class name="programBySir.TestSuite1BySir">
        <test-method signature="t1()[pri:0, instance:programBySir.TestSuite1BySir@429bffaa]" started-at="2022-09-10T09:52:58 IST" name="t1" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t1 -->
        <test-method signature="t2()[pri:0, instance:programBySir.TestSuite1BySir@429bffaa]" started-at="2022-09-10T09:52:58 IST" name="t2" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t2 -->
        <test-method signature="t3()[pri:0, instance:programBySir.TestSuite1BySir@429bffaa]" started-at="2022-09-10T09:52:58 IST" name="t3" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t3 -->
        <test-method signature="t4()[pri:0, instance:programBySir.TestSuite1BySir@429bffaa]" started-at="2022-09-10T09:52:58 IST" name="t4" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t4 -->
        <test-method signature="t5()[pri:0, instance:programBySir.TestSuite1BySir@429bffaa]" started-at="2022-09-10T09:52:58 IST" name="t5" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t5 -->
        <test-method signature="t6()[pri:0, instance:programBySir.TestSuite1BySir@429bffaa]" started-at="2022-09-10T09:52:58 IST" name="t6" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t6 -->
        <test-method signature="t7()[pri:0, instance:programBySir.TestSuite1BySir@429bffaa]" started-at="2022-09-10T09:52:58 IST" name="t7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t7 -->
        <test-method signature="t8()[pri:0, instance:programBySir.TestSuite1BySir@429bffaa]" started-at="2022-09-10T09:52:58 IST" name="t8" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t8 -->
        <test-method signature="t9()[pri:0, instance:programBySir.TestSuite1BySir@429bffaa]" started-at="2022-09-10T09:52:58 IST" name="t9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t9 -->
      </class> <!-- programBySir.TestSuite1BySir -->
      <class name="programBySir.Practice3">
        <test-method signature="test31()[pri:0, instance:programBySir.Practice3@4bb33f74]" started-at="2022-09-10T09:52:58 IST" name="test31" finished-at="2022-09-10T09:52:58 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
 Kahich Barubar Yen Zalay expected [true] but found [false],
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
 Kahich Barubar Yen Zalay expected [true] but found [false],
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at programBySir.Practice3.test31(Practice3.java:24)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test31 -->
        <test-method signature="test32()[pri:0, instance:programBySir.Practice3@4bb33f74]" started-at="2022-09-10T09:52:58 IST" name="test32" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at programBySir.Practice3.test32(Practice3.java:30)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test32 -->
      </class> <!-- programBySir.Practice3 -->
      <class name="pomEXECUTION.KiteExecution">
        <test-method is-config="true" signature="bs()[pri:0, instance:pomEXECUTION.KiteExecution@3059cbc]" started-at="2022-09-10T09:52:58 IST" name="bs" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bs -->
        <test-method is-config="true" signature="bt()[pri:0, instance:pomEXECUTION.KiteExecution@3059cbc]" started-at="2022-09-10T09:52:58 IST" name="bt" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bt -->
        <test-method is-config="true" signature="a1()[pri:0, instance:pomEXECUTION.KiteExecution@3059cbc]" started-at="2022-09-10T09:52:58 IST" name="a1" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.KiteExecution.a1(KiteExecution.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a1 -->
        <test-method is-config="true" signature="a2()[pri:0, instance:pomEXECUTION.KiteExecution@3059cbc]" started-at="2022-09-10T09:52:58 IST" name="a2" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778657" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a2 -->
        <test-method signature="a5()[pri:0, instance:pomEXECUTION.KiteExecution@3059cbc]" started-at="2022-09-10T09:52:58 IST" name="a5" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.KiteExecution.a1(KiteExecution.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a5 -->
        <test-method is-config="true" signature="a3()[pri:0, instance:pomEXECUTION.KiteExecution@3059cbc]" started-at="2022-09-10T09:52:58 IST" name="a3" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778659" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a3 -->
        <test-method is-config="true" signature="a4()[pri:0, instance:pomEXECUTION.KiteExecution@3059cbc]" started-at="2022-09-10T09:52:58 IST" name="a4" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778660" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a4 -->
        <test-method is-config="true" signature="a6()[pri:0, instance:pomEXECUTION.KiteExecution@3059cbc]" started-at="2022-09-10T09:52:58 IST" name="a6" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778894" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a6 -->
      </class> <!-- pomEXECUTION.KiteExecution -->
      <class name="programBySir.Practice2">
        <test-method signature="test21()[pri:0, instance:programBySir.Practice2@3c73951]" started-at="2022-09-10T09:52:58 IST" name="test21" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at programBySir.Practice2.test21(Practice2.java:12)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test21 -->
        <test-method signature="test22()[pri:0, instance:programBySir.Practice2@3c73951]" started-at="2022-09-10T09:52:58 IST" name="test22" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test22 -->
      </class> <!-- programBySir.Practice2 -->
      <class name="programBySir.Practice1">
        <test-method signature="test11()[pri:0, instance:programBySir.Practice1@3d5c822d]" started-at="2022-09-10T09:52:58 IST" name="test11" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Puppy] but found [Thappad]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Puppy] but found [Thappad]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at programBySir.Practice1.test11(Practice1.java:11)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11 -->
        <test-method signature="test13()[pri:0, instance:programBySir.Practice1@3d5c822d]" started-at="2022-09-10T09:52:58 IST" name="test13" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test13 -->
        <test-method signature="test12()[pri:0, instance:programBySir.Practice1@3d5c822d]" started-at="2022-09-10T09:52:58 IST" name="test12" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12 -->
        <test-method signature="test14()[pri:0, instance:programBySir.Practice1@3d5c822d]" started-at="2022-09-10T09:52:58 IST" name="test14" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test14 -->
        <test-method signature="test15()[pri:0, instance:programBySir.Practice1@3d5c822d]" started-at="2022-09-10T09:52:58 IST" name="test15" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Number bada nahi hai expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Number bada nahi hai expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at programBySir.Practice1.test15(Practice1.java:33)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test15 -->
        <test-method signature="test16()[pri:0, instance:programBySir.Practice1@3d5c822d]" started-at="2022-09-10T09:52:58 IST" name="test16" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test16 -->
        <test-method signature="test18()[pri:0, instance:programBySir.Practice1@3d5c822d]" started-at="2022-09-10T09:52:58 IST" name="test18" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test18 -->
        <test-method signature="test17()[pri:0, instance:programBySir.Practice1@3d5c822d]" started-at="2022-09-10T09:52:58 IST" name="test17" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test17 -->
      </class> <!-- programBySir.Practice1 -->
      <class name="programBySir.TestSuite2BySir">
        <test-method signature="r11()[pri:0, instance:programBySir.TestSuite2BySir@5403f35f]" started-at="2022-09-10T09:52:58 IST" name="r11" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r11 -->
        <test-method signature="r12()[pri:0, instance:programBySir.TestSuite2BySir@5403f35f]" started-at="2022-09-10T09:52:58 IST" name="r12" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at programBySir.TestSuite2BySir.r12(TestSuite2BySir.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r12 -->
        <test-method signature="r13()[pri:0, instance:programBySir.TestSuite2BySir@5403f35f]" started-at="2022-09-10T09:52:58 IST" name="r13" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r13 -->
        <test-method signature="r14()[pri:0, instance:programBySir.TestSuite2BySir@5403f35f]" started-at="2022-09-10T09:52:58 IST" name="r14" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r14 -->
        <test-method signature="r15()[pri:0, instance:programBySir.TestSuite2BySir@5403f35f]" started-at="2022-09-10T09:52:58 IST" name="r15" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r15 -->
        <test-method signature="r16()[pri:0, instance:programBySir.TestSuite2BySir@5403f35f]" started-at="2022-09-10T09:52:58 IST" name="r16" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r16 -->
        <test-method signature="r17()[pri:0, instance:programBySir.TestSuite2BySir@5403f35f]" started-at="2022-09-10T09:52:58 IST" name="r17" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at programBySir.TestSuite2BySir.r17(TestSuite2BySir.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r17 -->
        <test-method signature="r18()[pri:0, instance:programBySir.TestSuite2BySir@5403f35f]" started-at="2022-09-10T09:52:58 IST" name="r18" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r18 -->
        <test-method signature="r19()[pri:0, instance:programBySir.TestSuite2BySir@5403f35f]" started-at="2022-09-10T09:52:58 IST" name="r19" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r19 -->
      </class> <!-- programBySir.TestSuite2BySir -->
      <class name="pomEXECUTION.FKPOMExecution">
        <test-method is-config="true" signature="Bsuite()[pri:0, instance:pomEXECUTION.FKPOMExecution@6f46426d]" started-at="2022-09-10T09:52:58 IST" name="Bsuite" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bsuite -->
        <test-method is-config="true" signature="Btest()[pri:0, instance:pomEXECUTION.FKPOMExecution@6f46426d]" started-at="2022-09-10T09:52:58 IST" name="Btest" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Btest -->
        <test-method is-config="true" signature="Bclass()[pri:0, instance:pomEXECUTION.FKPOMExecution@6f46426d]" started-at="2022-09-10T09:52:58 IST" name="Bclass" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.FKPOMExecution.Bclass(FKPOMExecution.java:52)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bclass -->
        <test-method is-config="true" signature="Bmethod()[pri:0, instance:pomEXECUTION.FKPOMExecution@6f46426d]" started-at="2022-09-10T09:52:58 IST" name="Bmethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778679" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bmethod -->
        <test-method signature="flipkart()[pri:0, instance:pomEXECUTION.FKPOMExecution@6f46426d]" started-at="2022-09-10T09:52:58 IST" name="flipkart" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.FKPOMExecution.Bclass(FKPOMExecution.java:52)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flipkart -->
        <test-method is-config="true" signature="Aclass()[pri:0, instance:pomEXECUTION.FKPOMExecution@6f46426d]" started-at="2022-09-10T09:52:58 IST" name="Aclass" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778680" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aclass -->
        <test-method is-config="true" signature="Amethod()[pri:0, instance:pomEXECUTION.FKPOMExecution@6f46426d]" started-at="2022-09-10T09:52:58 IST" name="Amethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778680" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Amethod -->
        <test-method is-config="true" signature="Atest()[pri:0, instance:pomEXECUTION.FKPOMExecution@6f46426d]" started-at="2022-09-10T09:52:58 IST" name="Atest" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778788" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Atest -->
        <test-method is-config="true" signature="Asuite()[pri:0, instance:pomEXECUTION.FKPOMExecution@6f46426d]" started-at="2022-09-10T09:52:58 IST" name="Asuite" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778893" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Asuite -->
      </class> <!-- pomEXECUTION.FKPOMExecution -->
      <class name="programBySir.TestSuite2Listener">
        <test-method signature="w10()[pri:0, instance:programBySir.TestSuite2Listener@73700b80]" started-at="2022-09-10T09:52:58 IST" name="w10" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w10 -->
        <test-method signature="w6()[pri:0, instance:programBySir.TestSuite2Listener@73700b80]" started-at="2022-09-10T09:52:58 IST" name="w6" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w6 -->
        <test-method signature="w7()[pri:0, instance:programBySir.TestSuite2Listener@73700b80]" started-at="2022-09-10T09:52:58 IST" name="w7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w7 -->
        <test-method signature="w8()[pri:0, instance:programBySir.TestSuite2Listener@73700b80]" started-at="2022-09-10T09:52:58 IST" name="w8" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at programBySir.TestSuite2Listener.w8(TestSuite2Listener.java:20)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w8 -->
        <test-method signature="w9()[pri:0, instance:programBySir.TestSuite2Listener@73700b80]" started-at="2022-09-10T09:52:58 IST" name="w9" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w9 -->
      </class> <!-- programBySir.TestSuite2Listener -->
      <class name="programBySir.Group1BySir">
        <test-method signature="test1()[pri:0, instance:programBySir.Group1BySir@483f6d77]" started-at="2022-09-10T09:52:58 IST" name="test1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:programBySir.Group1BySir@483f6d77]" started-at="2022-09-10T09:52:58 IST" name="test2" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method signature="test3()[pri:0, instance:programBySir.Group1BySir@483f6d77]" started-at="2022-09-10T09:52:58 IST" name="test3" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method signature="test4()[pri:0, instance:programBySir.Group1BySir@483f6d77]" started-at="2022-09-10T09:52:58 IST" name="test4" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method signature="test5()[pri:0, instance:programBySir.Group1BySir@483f6d77]" started-at="2022-09-10T09:52:58 IST" name="test5" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method signature="test6()[pri:0, instance:programBySir.Group1BySir@483f6d77]" started-at="2022-09-10T09:52:58 IST" name="test6" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method signature="test7()[pri:0, instance:programBySir.Group1BySir@483f6d77]" started-at="2022-09-10T09:52:58 IST" name="test7" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
      </class> <!-- programBySir.Group1BySir -->
      <class name="programBySir.TestNGRegularExpressionBySir">
        <test-method signature="w11()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" started-at="2022-09-10T09:52:58 IST" name="w11" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w11 -->
        <test-method signature="w13()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" started-at="2022-09-10T09:52:58 IST" name="w13" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w13 -->
        <test-method signature="w12()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" started-at="2022-09-10T09:52:58 IST" name="w12" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w12 -->
        <test-method signature="w14()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" started-at="2022-09-10T09:52:58 IST" name="w14" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w14 -->
        <test-method signature="w15()[pri:0, instance:programBySir.TestNGRegularExpressionBySir@7e5afaa6]" started-at="2022-09-10T09:52:58 IST" name="w15" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- w15 -->
      </class> <!-- programBySir.TestNGRegularExpressionBySir -->
      <class name="programBySir.KeyWords2">
        <test-method signature="pu4()[pri:2, instance:programBySir.KeyWords2@63a12c68]" started-at="2022-09-10T09:52:58 IST" name="pu4" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pu4 -->
        <test-method signature="pu5()[pri:3, instance:programBySir.KeyWords2@63a12c68]" started-at="2022-09-10T09:52:58 IST" name="pu5" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pu5 -->
        <test-method signature="pu6()[pri:4, instance:programBySir.KeyWords2@63a12c68]" started-at="2022-09-10T09:52:58 IST" name="pu6" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pu6 -->
        <test-method signature="pu1()[pri:5, instance:programBySir.KeyWords2@63a12c68]" started-at="2022-09-10T09:52:58 IST" name="pu1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pu1 -->
        <test-method signature="pu2()[pri:6, instance:programBySir.KeyWords2@63a12c68]" started-at="2022-09-10T09:52:58 IST" name="pu2" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pu2 -->
        <test-method signature="pu2()[pri:6, instance:programBySir.KeyWords2@63a12c68]" started-at="2022-09-10T09:52:58 IST" name="pu2" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pu2 -->
        <test-method signature="pu2()[pri:6, instance:programBySir.KeyWords2@63a12c68]" started-at="2022-09-10T09:52:58 IST" name="pu2" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pu2 -->
        <test-method signature="pu2()[pri:6, instance:programBySir.KeyWords2@63a12c68]" started-at="2022-09-10T09:52:58 IST" name="pu2" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pu2 -->
        <test-method signature="pu2()[pri:6, instance:programBySir.KeyWords2@63a12c68]" started-at="2022-09-10T09:52:58 IST" name="pu2" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pu2 -->
      </class> <!-- programBySir.KeyWords2 -->
      <class name="programBySir.KeyWords1">
        <test-method signature="def()[pri:-233, instance:programBySir.KeyWords1@28f3b248]" started-at="2022-09-10T09:52:58 IST" name="def" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- def -->
        <test-method signature="mno()[pri:-233, instance:programBySir.KeyWords1@28f3b248]" started-at="2022-09-10T09:52:58 IST" name="mno" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mno -->
        <test-method signature="xyz()[pri:-101, instance:programBySir.KeyWords1@28f3b248]" started-at="2022-09-10T09:52:58 IST" name="xyz" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xyz -->
        <test-method signature="pqr()[pri:0, instance:programBySir.KeyWords1@28f3b248]" started-at="2022-09-10T09:52:58 IST" name="pqr" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pqr -->
        <test-method signature="abc()[pri:233, instance:programBySir.KeyWords1@28f3b248]" started-at="2022-09-10T09:52:58 IST" name="abc" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abc -->
      </class> <!-- programBySir.KeyWords1 -->
      <class name="pomEXECUTION.AmezonExecution">
        <test-method is-config="true" signature="Bsuite()[pri:0, instance:pomEXECUTION.AmezonExecution@1b1426f4]" started-at="2022-09-10T09:52:58 IST" name="Bsuite" finished-at="2022-09-10T09:52:58 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bsuite -->
        <test-method is-config="true" signature="Btest()[pri:0, instance:pomEXECUTION.AmezonExecution@1b1426f4]" started-at="2022-09-10T09:52:58 IST" name="Btest" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Btest -->
        <test-method is-config="true" signature="Bclass()[pri:0, instance:pomEXECUTION.AmezonExecution@1b1426f4]" started-at="2022-09-10T09:52:58 IST" name="Bclass" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.AmezonExecution.Bclass(AmezonExecution.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bclass -->
        <test-method is-config="true" signature="Bmethod()[pri:0, instance:pomEXECUTION.AmezonExecution@1b1426f4]" started-at="2022-09-10T09:52:58 IST" name="Bmethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778774" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bmethod -->
        <test-method signature="CSTest()[pri:0, instance:pomEXECUTION.AmezonExecution@1b1426f4]" started-at="2022-09-10T09:52:58 IST" name="CSTest" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32 (1)\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.AmezonExecution.Bclass(AmezonExecution.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CSTest -->
        <test-method is-config="true" signature="Aclass()[pri:0, instance:pomEXECUTION.AmezonExecution@1b1426f4]" started-at="2022-09-10T09:52:58 IST" name="Aclass" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778775" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aclass -->
        <test-method is-config="true" signature="Amethod()[pri:0, instance:pomEXECUTION.AmezonExecution@1b1426f4]" started-at="2022-09-10T09:52:58 IST" name="Amethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778775" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Amethod -->
        <test-method is-config="true" signature="Atest()[pri:0, instance:pomEXECUTION.AmezonExecution@1b1426f4]" started-at="2022-09-10T09:52:58 IST" name="Atest" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778788" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Atest -->
        <test-method is-config="true" signature="Asuite()[pri:0, instance:pomEXECUTION.AmezonExecution@1b1426f4]" started-at="2022-09-10T09:52:58 IST" name="Asuite" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778893" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Asuite -->
      </class> <!-- pomEXECUTION.AmezonExecution -->
      <class name="programBySir.KeyWords3">
        <test-method signature="mu1()[pri:0, instance:programBySir.KeyWords3@32b260fa]" started-at="2022-09-10T09:52:58 IST" name="mu1" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mu1 -->
        <test-method signature="mu2()[pri:0, instance:programBySir.KeyWords3@32b260fa]" started-at="2022-09-10T09:52:58 IST" name="mu2" finished-at="2022-09-10T09:52:58 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\VelocityTraining\SetUps\FireFoxGeckoDriver\geckodriver-v0.31.0-win64\geckodriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\VelocityTraining\SetUps\FireFoxGeckoDriver\geckodriver-v0.31.0-win64\geckodriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at programBySir.KeyWords3.mu2(KeyWords3.java:17)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:45)
at org.testng.internal.InvokeMethodRunnable.call(InvokeMethodRunnable.java:73)
at org.testng.internal.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mu2 -->
        <test-method signature="mu3()[pri:0, instance:programBySir.KeyWords3@32b260fa]" started-at="2022-09-10T09:52:58 IST" name="mu3" finished-at="2022-09-10T09:52:58 IST" depends-on-methods="programBySir.KeyWords3.mu2" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method KeyWords3.mu3()[pri:0, instance:programBySir.KeyWords3@32b260fa] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method KeyWords3.mu3()[pri:0, instance:programBySir.KeyWords3@32b260fa] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mu3 -->
        <test-method signature="mu4()[pri:0, instance:programBySir.KeyWords3@32b260fa]" started-at="2022-09-10T09:52:58 IST" name="mu4" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mu4 -->
        <test-method signature="mu5()[pri:0, instance:programBySir.KeyWords3@32b260fa]" started-at="2022-09-10T09:52:58 IST" name="mu5" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mu5 -->
      </class> <!-- programBySir.KeyWords3 -->
      <class name="pomEXECUTION.NewTestNGClass">
        <test-method is-config="true" signature="Bsuite()[pri:0, instance:pomEXECUTION.NewTestNGClass@581ac8a8]" started-at="2022-09-10T09:52:58 IST" name="Bsuite" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bsuite -->
        <test-method is-config="true" signature="Btest()[pri:0, instance:pomEXECUTION.NewTestNGClass@581ac8a8]" started-at="2022-09-10T09:52:58 IST" name="Btest" finished-at="2022-09-10T09:52:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Btest -->
        <test-method is-config="true" signature="Bclass()[pri:0, instance:pomEXECUTION.NewTestNGClass@581ac8a8]" started-at="2022-09-10T09:52:58 IST" name="Bclass" finished-at="2022-09-10T09:52:58 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.NewTestNGClass.Bclass(NewTestNGClass.java:60)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bclass -->
        <test-method is-config="true" signature="Bmethod()[pri:0, instance:pomEXECUTION.NewTestNGClass@581ac8a8]" started-at="2022-09-10T09:52:58 IST" name="Bmethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778786" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bmethod -->
        <test-method is-config="true" signature="Aclass()[pri:0, instance:pomEXECUTION.NewTestNGClass@581ac8a8]" started-at="2022-09-10T09:52:58 IST" name="Aclass" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778787" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aclass -->
        <test-method signature="f()[pri:0, instance:pomEXECUTION.NewTestNGClass@581ac8a8]" started-at="2022-09-10T09:52:58 IST" name="f" finished-at="2022-09-10T09:52:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Velocitytraining\Setups\Chrome\chromedriver_win32\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at pomEXECUTION.NewTestNGClass.Bclass(NewTestNGClass.java:60)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="Amethod()[pri:0, instance:pomEXECUTION.NewTestNGClass@581ac8a8]" started-at="2022-09-10T09:52:58 IST" name="Amethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778787" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Amethod -->
        <test-method is-config="true" signature="Atest()[pri:0, instance:pomEXECUTION.NewTestNGClass@581ac8a8]" started-at="2022-09-10T09:52:58 IST" name="Atest" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778788" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Atest -->
        <test-method is-config="true" signature="Asuite()[pri:0, instance:pomEXECUTION.NewTestNGClass@581ac8a8]" started-at="2022-09-10T09:52:58 IST" name="Asuite" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1662783778894" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Asuite -->
      </class> <!-- pomEXECUTION.NewTestNGClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
